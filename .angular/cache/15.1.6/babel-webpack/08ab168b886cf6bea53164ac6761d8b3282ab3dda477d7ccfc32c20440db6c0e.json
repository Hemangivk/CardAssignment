{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./anime.service\";\nimport * as i2 from \"@angular/common\";\nfunction AppComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"div\", 3);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"img\", 4);\n    i0.ɵɵelementStart(4, \"div\", 5);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const anime_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"#\", anime_r1.rank, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", anime_r1.images.jpg.image_url, i0.ɵɵsanitizeUrl)(\"alt\", anime_r1.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(anime_r1.title);\n  }\n}\nexport class AppComponent {\n  constructor(animeService) {\n    this.animeService = animeService;\n    this.animeList = [];\n    this.chartyear = [];\n    this.chartTitle = [];\n    this.gridColumns = 5;\n  }\n  ngOnInit() {\n    this.animeService.getTopAnime().subscribe(data => {\n      const response = data;\n      this.animeList = data;\n      const arrYear = [];\n      const arrTitle = [];\n      data.data.filter(itm => itm.year !== null).sort((a, b) => a?.year - b?.year).map((item, idx) => {\n        arrYear.push(item.year);\n        arrTitle.push(item.title);\n      });\n      console.log('arrLevel', arrYear);\n      console.log('arrValue', arrTitle);\n      this.chartyear = arrYear;\n      this.chartTitle = arrTitle;\n    });\n  }\n  toggleGridColumns() {\n    this.gridColumns = this.gridColumns === 5 ? 4 : 5;\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.AnimeService));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 2,\n  vars: 1,\n  consts: [[1, \"card-grid\"], [\"class\", \"card\", 4, \"ngFor\", \"ngForOf\"], [1, \"card\"], [1, \"rank\"], [1, \"cover\", 3, \"src\", \"alt\"], [1, \"title\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, AppComponent_div_1_Template, 6, 4, \"div\", 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.animeList == null ? null : ctx.animeList.data);\n    }\n  },\n  dependencies: [i2.NgForOf],\n  styles: [\".card-grid[_ngcontent-%COMP%] {\\r\\n    display: flex;\\r\\n    flex-wrap: wrap;\\r\\n    gap: 20px;\\r\\n  }\\r\\n  \\r\\n  .card[_ngcontent-%COMP%] {\\r\\n    position: relative;\\r\\n    width: 200px;\\r\\n    height: 300px;\\r\\n    background-color: #fff;\\r\\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\\r\\n    border-radius: 8px;\\r\\n    overflow: hidden;\\r\\n  }\\r\\n  \\r\\n  .rank[_ngcontent-%COMP%] {\\r\\n    position: absolute;\\r\\n    top: 10px;\\r\\n    right: 10px;\\r\\n    padding: 6px 12px;\\r\\n    background-color: #f44336;\\r\\n    color: #fff;\\r\\n    font-size: 16px;\\r\\n    border-radius: 0 0 0 8px;\\r\\n  }\\r\\n  \\r\\n  .cover[_ngcontent-%COMP%] {\\r\\n    width: 100%;\\r\\n    height: 250px;\\r\\n    object-fit: cover;\\r\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0lBQ2IsZUFBZTtJQUNmLFNBQVM7RUFDWDs7RUFFQTtJQUNFLGtCQUFrQjtJQUNsQixZQUFZO0lBQ1osYUFBYTtJQUNiLHNCQUFzQjtJQUN0Qix3Q0FBd0M7SUFDeEMsa0JBQWtCO0lBQ2xCLGdCQUFnQjtFQUNsQjs7RUFFQTtJQUNFLGtCQUFrQjtJQUNsQixTQUFTO0lBQ1QsV0FBVztJQUNYLGlCQUFpQjtJQUNqQix5QkFBeUI7SUFDekIsV0FBVztJQUNYLGVBQWU7SUFDZix3QkFBd0I7RUFDMUI7O0VBRUE7SUFDRSxXQUFXO0lBQ1gsYUFBYTtJQUNiLGlCQUFpQjtFQUNuQiIsInNvdXJjZXNDb250ZW50IjpbIi5jYXJkLWdyaWQge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtd3JhcDogd3JhcDtcclxuICAgIGdhcDogMjBweDtcclxuICB9XHJcbiAgXHJcbiAgLmNhcmQge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgd2lkdGg6IDIwMHB4O1xyXG4gICAgaGVpZ2h0OiAzMDBweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XHJcbiAgICBib3gtc2hhZG93OiAwIDJweCA0cHggcmdiYSgwLCAwLCAwLCAwLjEpO1xyXG4gICAgYm9yZGVyLXJhZGl1czogOHB4O1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICB9XHJcbiAgXHJcbiAgLnJhbmsge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgdG9wOiAxMHB4O1xyXG4gICAgcmlnaHQ6IDEwcHg7XHJcbiAgICBwYWRkaW5nOiA2cHggMTJweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmNDQzMzY7XHJcbiAgICBjb2xvcjogI2ZmZjtcclxuICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDAgMCAwIDhweDtcclxuICB9XHJcbiAgXHJcbiAgLmNvdmVyIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAyNTBweDtcclxuICAgIG9iamVjdC1maXQ6IGNvdmVyO1xyXG4gIH1cclxuICAiXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":";;;;;IACEA,8BAAwD;IACpCA,YAAiB;IAAAA,iBAAM;IACzCA,yBAA0E;IAC1EA,8BAAmB;IAAAA,YAAiB;IAAAA,iBAAM;;;;IAFxBA,eAAiB;IAAjBA,6CAAiB;IAC9BA,eAAkC;IAAlCA,qEAAkC;IACpBA,eAAiB;IAAjBA,oCAAiB;;;ACIxC,OAAM,MAAOC,YAAY;EAKvBC,YAAoBC,YAA0B;IAA1B,iBAAY,GAAZA,YAAY;IAJhC,cAAS,GAAQ,EAAE;IACnB,cAAS,GAAQ,EAAE;IACnB,eAAU,GAAQ,EAAE;IACpB,gBAAW,GAAG,CAAC;EACkC;EAEjDC,QAAQ;IACN,IAAI,CAACD,YAAY,CAACE,WAAW,EAAE,CAACC,SAAS,CAAEC,IAAS,IAAI;MACtD,MAAMC,QAAQ,GAAGD,IAAI;MAErB,IAAI,CAACE,SAAS,GAAGF,IAAI;MAErB,MAAMG,OAAO,GAAQ,EAAE;MACvB,MAAMC,QAAQ,GAAQ,EAAE;MACxBJ,IAAI,CAACA,IAAI,CAACK,MAAM,CAAEC,GAAQ,IAAKA,GAAG,CAACC,IAAI,KAAK,IAAI,CAAC,CAC9CC,IAAI,CAAC,CAACC,CAAM,EAAEC,CAAM,KAAKD,CAAC,EAAEF,IAAI,GAAGG,CAAC,EAAEH,IAAI,CAAC,CAC3CI,GAAG,CAAC,CAACC,IAAS,EAAEC,GAAW,KAAI;QAC9BV,OAAO,CAACW,IAAI,CAACF,IAAI,CAACL,IAAI,CAAC;QACvBH,QAAQ,CAACU,IAAI,CAACF,IAAI,CAACG,KAAK,CAAC;MAC3B,CAAC,CAAC;MACHC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEd,OAAO,CAAC;MAChCa,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEb,QAAQ,CAAC;MAClC,IAAI,CAACc,SAAS,GAAGf,OAAO;MACxB,IAAI,CAACgB,UAAU,GAAGf,QAAQ;IAC5B,CAAC,CAAC;EACJ;EACAgB,iBAAiB;IACf,IAAI,CAACC,WAAW,GAAG,IAAI,CAACA,WAAW,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC;EACnD;;AA7BW3B,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA,YAAY;EAAA4B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDRzBjC,8BAAuB;MACrBA,6DAIM;MACRA,iBAAM;;;MALgCA,eAAkB;MAAlBA,2EAAkB","names":["i0","AppComponent","constructor","animeService","ngOnInit","getTopAnime","subscribe","data","response","animeList","arrYear","arrTitle","filter","itm","year","sort","a","b","map","item","idx","push","title","console","log","chartyear","chartTitle","toggleGridColumns","gridColumns","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["D:\\AngularLern\\21Feb2023\\my-anime-app\\src\\app\\app.component.html","D:\\AngularLern\\21Feb2023\\my-anime-app\\src\\app\\app.component.ts"],"sourcesContent":["<div class=\"card-grid\">\n  <div class=\"card\" *ngFor=\"let anime of animeList?.data\">\n    <div class=\"rank\">#{{ anime.rank }}</div>\n    <img [src]=\"anime.images.jpg.image_url\" [alt]=\"anime.title\" class=\"cover\">\n    <div class=\"title\">{{ anime.title }}</div>\n  </div>\n</div>\n\n ","import { Component, OnInit } from '@angular/core';\nimport { AnimeService } from './anime.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  animeList: any = [];\n  chartyear: any = [];\n  chartTitle: any = [];\n  gridColumns = 5;\n  constructor(private animeService: AnimeService) {}\n\n  ngOnInit() {\n    this.animeService.getTopAnime().subscribe((data: any) => {\n      const response = data;\n      \n      this.animeList = data;\n      \n      const arrYear: any = [];\n      const arrTitle: any = [];\n      data.data.filter((itm: any) => itm.year !== null)\n        .sort((a: any, b: any) => a?.year - b?.year)\n        .map((item: any, idx: number) => {         \n          arrYear.push(item.year);\n          arrTitle.push(item.title);\n        });\n       console.log('arrLevel', arrYear);\n       console.log('arrValue', arrTitle);\n      this.chartyear = arrYear;\n      this.chartTitle = arrTitle;\n    });\n  }\n  toggleGridColumns() {\n    this.gridColumns = this.gridColumns === 5 ? 4 : 5;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}