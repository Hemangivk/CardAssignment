{"ast":null,"code":"import { Chart, registerables } from 'chart.js';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../anime.service\";\nexport class LinechartComponent {\n  constructor(service) {\n    this.service = service;\n    this.chart = [];\n    Chart.register(...registerables);\n  }\n  ngOnInit() {\n    this.service.getTopAnime().subscribe(res => {\n      this.result = res;\n      const arrLevel = [];\n      const arrValue = [];\n      this.arrLevel = this.result.data.map(cyear => cyear.year);\n      this.arrValue = this.result.data.map(ctitle => ctitle.title);\n      console.log(this.arrLevel);\n      console.log(this.arrValue);\n      const result = this.result.data.reduce(function (r, a) {\n        r[a.year] = r[a.year] || [];\n        if (a !== null) {\n          const dataVal = a.title;\n          r[a.year].push(dataVal);\n        }\n        return r;\n      }, Object.create(null));\n      var keys = Object.keys(result).filter(Number);\n      var values = Object.values(result).map(itm => {\n        return itm.length;\n      });\n      this.chart = new Chart('canvas', {\n        type: 'line',\n        data: {\n          labels: keys,\n          datasets: [{\n            data: values,\n            borderColor: '#3e95cd',\n            fill: false,\n            label: 'Anime',\n            backgroundColor: 'rgba(93, 175, 89, 0.1)',\n            borderWidth: 3\n          }]\n        },\n        options: {\n          responsive: true,\n          maintainAspectRatio: false\n        }\n      });\n    });\n  }\n}\nLinechartComponent.ɵfac = function LinechartComponent_Factory(t) {\n  return new (t || LinechartComponent)(i0.ɵɵdirectiveInject(i1.AnimeService));\n};\nLinechartComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LinechartComponent,\n  selectors: [[\"app-linechart\"]],\n  decls: 3,\n  vars: 1,\n  consts: [[\"width\", \"400\", \"height\", \"400\"], [\"id\", \"canvas\"]],\n  template: function LinechartComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"canvas\", 1);\n      i0.ɵɵtext(2);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.chart);\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAEA,SAASA,KAAK,EAAEC,aAAa,QAAQ,UAAU;;;AAS/C,OAAM,MAAOC,kBAAkB;EAQ7BC,YAAoBC,OAAqB;IAArB,YAAO,GAAPA,OAAO;IAJ3B,UAAK,GAAQ,EAAE;IAKbJ,KAAK,CAACK,QAAQ,CAAC,GAAGJ,aAAa,CAAC;EAClC;EAEAK,QAAQ;IACN,IAAI,CAACF,OAAO,CAACG,WAAW,EAAE,CAACC,SAAS,CAAEC,GAAG,IAAI;MAC3C,IAAI,CAACC,MAAM,GAAGD,GAAG;MACjB,MAAME,QAAQ,GAAQ,EAAE;MACxB,MAAMC,QAAQ,GAAQ,EAAE;MACxB,IAAI,CAACD,QAAQ,GAAG,IAAI,CAACD,MAAM,CAACG,IAAI,CAACC,GAAG,CAAEC,KAAU,IAAKA,KAAK,CAACC,IAAI,CAAC;MAChE,IAAI,CAACJ,QAAQ,GAAG,IAAI,CAACF,MAAM,CAACG,IAAI,CAACC,GAAG,CAAEG,MAAW,IAAKA,MAAM,CAACC,KAAK,CAAC;MACnEC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACT,QAAQ,CAAE;MAC3BQ,OAAO,CAACC,GAAG,CAAE,IAAI,CAACR,QAAQ,CAAC;MAE3B,MAAMF,MAAM,GAAI,IAAI,CAACA,MAAM,CAACG,IAAI,CAACQ,MAAM,CAAC,UAAUC,CAAM,EAAEC,CAAM;QAC9DD,CAAC,CAACC,CAAC,CAACP,IAAI,CAAC,GAAGM,CAAC,CAACC,CAAC,CAACP,IAAI,CAAC,IAAI,EAAE;QAC3B,IAAIO,CAAC,KAAK,IAAI,EAAE;UACd,MAAMC,OAAO,GAAGD,CAAC,CAACL,KAAK;UACvBI,CAAC,CAACC,CAAC,CAACP,IAAI,CAAC,CAACS,IAAI,CAACD,OAAO,CAAC;;QAEzB,OAAOF,CAAC;MACV,CAAC,EAAEI,MAAM,CAACC,MAAM,CAAC,IAAI,CAAC,CAAC;MAEvB,IAAIC,IAAI,GAAGF,MAAM,CAACE,IAAI,CAAClB,MAAM,CAAC,CAACmB,MAAM,CAACC,MAAM,CAAC;MAE7C,IAAIC,MAAM,GAAGL,MAAM,CAACK,MAAM,CAACrB,MAAM,CAAC,CAC/BI,GAAG,CAAEkB,GAAQ,IAAI;QAChB,OAAOA,GAAG,CAACC,MAAM;MACnB,CAAC,CAAC;MACJ,IAAI,CAACC,KAAK,GAAG,IAAIlC,KAAK,CAAC,QAAQ,EAAE;QAC/BmC,IAAI,EAAE,MAAM;QACZtB,IAAI,EAAE;UACJuB,MAAM,EAAER,IAAI;UACZS,QAAQ,EAAE,CACR;YACExB,IAAI,EAAEkB,MAAM;YACZO,WAAW,EAAE,SAAS;YACtBC,IAAI,EAAE,KAAK;YACXC,KAAK,EAAE,OAAO;YACdC,eAAe,EAAE,wBAAwB;YACzCC,WAAW,EAAE;WACd;SAEJ;QACDC,OAAO,EAAC;UACNC,UAAU,EAAC,IAAI;UACfC,mBAAmB,EAAC;;OAEvB,CAAC;IAEJ,CAAC,CAAC;EACJ;;AA3DW3C,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;QAAlBA,kBAAkB;EAAA4C;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCX/BC,8BAA8B;MACNA,YAAS;MAAAA,iBAAS;;;MAAlBA,eAAS;MAATA,+BAAS","names":["Chart","registerables","LinechartComponent","constructor","service","register","ngOnInit","getTopAnime","subscribe","res","result","arrLevel","arrValue","data","map","cyear","year","ctitle","title","console","log","reduce","r","a","dataVal","push","Object","create","keys","filter","Number","values","itm","length","chart","type","labels","datasets","borderColor","fill","label","backgroundColor","borderWidth","options","responsive","maintainAspectRatio","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["D:\\AngularLern\\21Feb2023\\my-anime-app\\src\\app\\linechart\\linechart.component.ts","D:\\AngularLern\\21Feb2023\\my-anime-app\\src\\app\\linechart\\linechart.component.html"],"sourcesContent":["import { Component, ElementRef, ViewChild } from '@angular/core';\nimport { AnimeService } from '../anime.service';\nimport { Chart, registerables } from 'chart.js';\n\n@Component({\n  selector: 'app-linechart',\n  templateUrl: './linechart.component.html',\n  styleUrls: ['./linechart.component.css']\n})\n\n\nexport class LinechartComponent {\n  result: any;\n  arrLevel: any;\n  arrValue: any;\n  chart: any = [];\n\n \n\n  constructor(private service: AnimeService) {\n    Chart.register(...registerables);\n  }\n\n  ngOnInit() {\n    this.service.getTopAnime().subscribe((res) => {\n      this.result = res;\n      const arrLevel: any = [];\n      const arrValue: any = [];\n      this.arrLevel = this.result.data.map((cyear: any) => cyear.year);\n      this.arrValue = this.result.data.map((ctitle: any) => ctitle.title);\n      console.log(this.arrLevel );\n      console.log( this.arrValue);\n\n      const result =  this.result.data.reduce(function (r: any, a: any) {\n        r[a.year] = r[a.year] || [];        \n        if (a !== null) {           \n          const dataVal = a.title;\n          r[a.year].push(dataVal);           \n        }\n        return r;\n      }, Object.create(null));\n\n      var keys = Object.keys(result).filter(Number);\n      \n      var values = Object.values(result)\n        .map((itm: any) => {          \n          return itm.length;\n        });\n      this.chart = new Chart('canvas', {\n        type: 'line',\n        data: {\n          labels: keys,\n          datasets: [\n            {\n              data: values,\n              borderColor: '#3e95cd',\n              fill: false,\n              label: 'Anime',\n              backgroundColor: 'rgba(93, 175, 89, 0.1)',\n              borderWidth: 3,\n            },\n          ],          \n        },\n        options:{\n          responsive:true,\n          maintainAspectRatio:false,        \n        }\n      });\n       \n    });\n  }\n\n\n}\n","<div width=\"400\" height=\"400\">\n    <canvas id=\"canvas\">{{chart}}</canvas>\n  </div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}